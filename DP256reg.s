 REGBS = $0000 ; DP256 register bank base address
 PORTA = REGBS+0 ;port A = Address lines A8 A15
 PORTB = REGBS+1 ;port B = Address lines A0 A7
 DDRA = REGBS+2 ;port A direction register
 DDRB = REGBS+3 ;port A direction register
 PORTE = REGBS+8 ;port E = mode,IRQandcontrolsignals
 DDRE = REGBS+9 ;port E direction register
 PEAR = REGBS+$A ;port E assignments
 MODE = REGBS+$B ;Mode register
 PUCR = REGBS+$C ;port pull-up control register
 RDRIV = REGBS+$D ;port reduced drive control register
 EBICTL = REGBS+$E ;E stretch control

 INITRM = REGBS+$10 ;Ram location register
 INITRG = REGBS+$11 ;Register location register
 INITEE = REGBS+$12 ;EEprom location register
 MISC = REGBS+$13 ;MiscellaneoMapping control
 MTST0 = REGBS+$14 ; RESERVED
 ITCR = REGBS+$15 ;Interrupt test control register
 ITEST = REGBS+$16 ;Interrupt test register
 MTST1 = REGBS+$17 ; Reserved

 PARTIDH = REGBS+$1A ;Part ID high
 PARTIDL = REGBS+$1B ;Part ID low
 MEMSIZ0 = REGBS+$1C ;memory size
 MEMSIZ1 = REGBS+$1D ;memory size
 INTCR = REGBS+$1E ;interrupt control register
 HPRIO = REGBS+$1F ;high priority reg

 BKPCT0 = REGBS+$28 ;Break control register
 BKPCT1 = REGBS+$29 ;Break control register
 BKP0X = REGBS+$2A ; Break 0 index register
 BKP0H = REGBS+$2B ; Break 0 pointer high
 BRP0L = REGBS+$2C ; Break 0 pointer low
 BKP1X = REGBS+$2D ; Break 1 index register
 BKP1H = REGBS+$2E ; Break 1 pointer high
 BRP1L = REGBS+$2F ; Break 1 pointer low
 PPAGE = REGBS+$30 ;Program Page register

 PORTK = REGBS+$32 ;Port K data
 DDRK = REGBS+$33 ;Port K direction
 SYNR = REGBS+$34 ; Synthesizer / multiplier register
 REFDV = REGBS+$35 ; Reference divider register
 CTFLG = REGBS+$36 ; RESERVED
 CRGFLG = REGBS+$37 ; PLL flags register
 CRGINT = REGBS+$38 ; PLL interrupt register
 CLKSEL = REGBS+$39 ; Clock select register
 PLLCTL = REGBS+$3A ; PLL control register
 RTICTL = REGBS+$3B ;Real time interrupt control
 COPCTL = REGBS+$3C ;Watchdog control
 FORBYP = REGBS+$3D ;
 CTCTL = REGBS+$3E ;
 ARMCOP = REGBS+$3F ;COP reset register

 TIOS = REGBS+$40 ;timer input/output select
 CFORC = REGBS+$41 ;timer compare force
 OC7M = REGBS+$42 ;timer output compare 7 mask
 OC7D = REGBS+$43 ;timer output compare 7 data
 TCNT = REGBS+$44 ;timer counter register hi
 *TCNT = REGBS+$45 ;timer counter register lo
 TSCR = REGBS+$46 ;timer system control register
 TTOV = REGBS+$47 ;reserved
 TCTL1 = REGBS+$48 ;timer control register 1
 TCTL2 = REGBS+$49 ;timer control register 2
 TCTL3 = REGBS+$4A ;timer control register 3
 TCTL4 = REGBS+$4B ;timer control register 4
 TMSK1 = REGBS+$4C ;timer interrupt mask 1
 TMSK2 = REGBS+$4D ;timer interrupt mask 2
 TFLG1 = REGBS+$4E ;timer flags 1
 TFLG2 = REGBS+$4F ;timer flags 2
 TC0 = REGBS+$50 ;timer capture/comparregister 0
 *TC0 = REGBS+$51 ;
 TC1 = REGBS+$52 ;timer capture/comparregister 1
 *TC1 = REGBS+$53 ;
 TC2 = REGBS+$54 ;timer capture/comparregister 2
 *TC2 = REGBS+$55 ;
 TC3 = REGBS+$56 ;timer capture/comparregister 3
 *TC3 = REGBS+$57 ;
 TC4 = REGBS+$58 ;timer capture/comparregister 4
 *TC4 = REGBS+$59 ;
 TC5 = REGBS+$5A ;timer capture/comparregister 5
 *TC5 = REGBS+$5B ;
 TC6 = REGBS+$5C ;timer capture/comparregister 6
 *TC6 = REGBS+$5D ;
 TC7 = REGBS+$5E ;timer capture/comparregister 7
 *TC7 = REGBS+$5F ;
 PACTL = REGBS+$60 ;pulse accumulator controls
 PAFLG = REGBS+$61 ;pulse accumulator flags
 PACN3 = REGBS+$62 ;pulse accumulator counter 3
 PACN2 = REGBS+$63 ;pulse accumulator counter 2
 PACN1 = REGBS+$64 ;pulse accumulator counter 1
 PACN0 = REGBS+$65 ;pulse accumulator counter 0
 MCCTL = REGBS+$66 ;Modulus down conunter control
 MCFLG = REGBS+$67 ;down counter flags
 ICPAR = REGBS+$68 ;Input pulse accumulatocontrol
 DLYCT = REGBS+$69 ;Delay count to down counter
 ICOVW = REGBS+$6A ;Input control overwrite register
 ICSYS = REGBS+$6B ;Input control system control

 TIMTST = REGBS+$6D ;timer test register

 PBCTL = REGBS+$70 ; Pulse accumulatoB control
 PBFLG = REGBS+$71 ; Pulse accumulatoB flags
 PA3H = REGBS+$72 ; Pulse Accumulatoholding regist3
 PA2H = REGBS+$73 ; Pulse Accumulatoholding regist2
 PA1H = REGBS+$74 ; Pulse Accumulatoholding regist1
 PA0H = REGBS+$75 ; Pulse Accumulatoholding regist0
 MCCNT = REGBS+$76 ; Modulus down counter register
 *MCCNTL = REGBS+$77 ; low byte
 TCOH = REGBS+$78 ; Capture 0 holding register
 TC1H = REGBS+$7A ; Capture 1 holding register
 TC2H = REGBS+$7C ; Capture 2 holding register
 TC3H = REGBS+$7E ; Capture 3 holding register

 ATD0CTL0 = REGBS+$80 ;ADC control 0 (reserved)
 ATD0CTL1 = REGBS+$81 ;ADC control 1 (reserved)
 ATD0CTL2 = REGBS+$82 ;ADC control 2
 ATD0CTL3 = REGBS+$83 ;ADC control 3
 ATD0CTL4 = REGBS+$84 ;ADC control 4
 ATD0CTL5 = REGBS+$85 ;ADC control 5
 ATD0STAT = REGBS+$86 ;ADC status register hi
 *ATD0STAT = REGBS+$87 ;ADC status register lo
 ATD0TEST = REGBS+$88 ;ADC test (reserved)
 *ATD0TEST = REGBS+$89 ;

 ATD0DIEN = REGBS+$8D ;

 PORTAD = REGBS+$8F ;port ADC = input only
 ADR00H = REGBS+$90 ;ADC result 0 register
 ADR01H = REGBS+$92 ;ADC result 1 register
 ADR02H = REGBS+$94 ;ADC result 2 register
 ADR03H = REGBS+$96 ;ADC result 3 register
 ADR04H = REGBS+$98 ;ADC result 4 register
 ADR05H = REGBS+$9A ;ADC result 5 register
 ADR06H = REGBS+$9C ;ADC result 6 register
 ADR07H = REGBS+$9E ;ADC result 7 register

 PWME = REGBS+$A0 ;PWM enable
 PWMPOL = REGBS+$A1 ;PWM polarity
 PWMCLK = REGBS+$A2 ;PWM clock select register
 PWMPRCLK = REGBS+$A3 ;PWM Prescale clock select register
 PWMCAE = REGBS+$A4 ;PWM center align select register
 PWMCTL = REGBS+$A5 ;PWM control register
 PWMTST = REGBS+$A6 ;reserved
 PWMPRSC = REGBS+$A7 ;reserved
 PWMSCLA = REGBS+$A8 ;PWM Scale A
 PWMSCLB = REGBS+$A9 ;PWM scale B
 PWMSCNTA = REGBS+$AA ;reserved
 PWMSCNTB = REGBS+$AB ;reserved
 PWMCNT0 = REGBS+$AC ;PWM channel 0 counter
 PWMCNT1 = REGBS+$AD ;PWM channel 1 counter
 PWMCNT2 = REGBS+$AE ;PWM channel 2 counter
 PWMCNT3 = REGBS+$AF ;PWM channel 3 counter
 PWMCNT4 = REGBS+$B0 ;PWM channel 4 counter
 PWMCNT5 = REGBS+$B1 ;PWM channel 5 counter
 PWMCNT6 = REGBS+$B2 ;PWM channel 6 counter
 PWMCNT7 = REGBS+$B3 ;PWM channel 7 counter
 PWMPER0 = REGBS+$B4 ;PWM channel 0 period
 PWMPER1 = REGBS+$B5 ;PWM channel 1 period
 PWMPER2 = REGBS+$B6 ;PWM channel 2 period
 PWMPER3 = REGBS+$B7 ;PWM channel 3 period
 PWMPER4 = REGBS+$B8 ;PWM channel 4 period
 PWMPER5 = REGBS+$B9 ;PWM channel 5 period
 PWMPER6 = REGBS+$BA ;PWM channel 6 period
 PWMPER7 = REGBS+$BB ;PWM channel 7 period
 PWMDTY0 = REGBS+$BC ;PWM channel 0 duty cycle
 PWMDTY1 = REGBS+$BD ;PWM channel 1 duty cycle
 PWMDTY2 = REGBS+$BE ;PWM channel 2 duty cycle
 PWMDTY3 = REGBS+$BF ;PWM channel 3 duty cycle
 PWMDTY4 = REGBS+$C0 ;PWM channel 0 duty cycle
 PWMDTY5 = REGBS+$C1 ;PWM channel 1 duty cycle
 PWMDTY6 = REGBS+$C2 ;PWM channel 2 duty cycle
 PWMDTY7 = REGBS+$C3 ;PWM channel 3 duty cycle
 PWMSDN = REGBS+$C4 ;PWM shutdown register

 SC0BDH = REGBS+$C8 ;sci 0 baud reg hi byte
 SC0BDL = REGBS+$C9 ;sci 0 baud reg lo byte
 SC0CR1 = REGBS+$CA ;sci 0 control1 reg
 SC0CR2 = REGBS+$CB ;sci 0 control2 reg
 SC0SR1 = REGBS+$CC ;sci 0 status reg 1
 SC0SR2 = REGBS+$CD ;sci 0 status reg 2
 SC0DRH = REGBS+$CE ;sci 0 data reg hi
 SC0DRL = REGBS+$CF ;sci 0 data reg lo
 SC1BDH = REGBS+$D0 ;sci 1 baud reg hi byte
 SC1BDL = REGBS+$D1 ;sci 1 baud reg lo byte
 SC1CR1 = REGBS+$D2 ;sci 1 control1 reg
 SC1CR2 = REGBS+$D3 ;sci 1 control2 reg
 SC1SR1 = REGBS+$D4 ;sci 1 status reg 1
 SC1SR2 = REGBS+$D5 ;sci 1 status reg 2
 SC1DRH = REGBS+$D6 ;sci 1 data reg hi
 SC1DRL = REGBS+$D7 ;sci 1 data reg lo
 SPI0CR1 = REGBS+$D8 ;spi 0 control1 reg
 SPI0CR2 = REGBS+$D9 ;spi 0 control2 reg
 SPI0BR = REGBS+$DA ;spi 0 baud reg
 SPI0SR = REGBS+$DB ;spi 0 status reg hi

 SP0DR = REGBS+$DD ;spi 0 data reg

 IBAD = REGBS+$E0 ;I2C Bus address register
 IBFD = REGBS+$E1 ;I2C Bus fr=ency divider
 IBCR = REGBS+$E2 ;I2C Bus control register
 IBSR = REGBS+$E3 ;I2C Bus status register
 IBDR = REGBS+$E4 ;I2C Bus message data register

 DLCBCR1 = REGBS+$E8 ;BDLC Control regsiter 1
 DLCBSVR = REGBS+$E9 ;BDLC State vector register
 DLCBCR2 = REGBS+$EA ;BDLC Control register 2
 DLCBDR = REGBS+$EB ;BDLC Data register
 DLCBARD = REGBS+$EC ;BDLC Analog delay register
 DLCBRSR = REGBS+$ED ;BDLC Rate select register
 DLCSCR = REGBS+$EE ;BDLC Control register
 DLCBSTAT = REGBS+$EF ;BDLC Status register
 SPI1CR1 = REGBS+$F0 ;spi 1 control1 reg
 SPI1CR2 = REGBS+$F1 ;spi 1 control2 reg
 SPI1BR = REGBS+$F2 ;spi 1 baud reg
 SPI1SR = REGBS+$F3 ;spi 1 status reg hi

 SP1DR = REGBS+$F5 ;spi 1 data reg

 SPI2CR1 = REGBS+$F8 ;spi 2 control1 reg
 SPI2CR2 = REGBS+$F9 ;spi 2 control2 reg
 SPI2BR = REGBS+$FA ;spi 2 baud reg
 SPI2SR = REGBS+$FB ;spi 2 status reg hi

 SP2DR = REGBS+$FD ;spi 2 data reg

 FCLKDIV = REGBS+$100 ;FLASH clock divider
 FSEC = REGBS+$101 ;FLASH security register

 FCNFG = REGBS+$103 ;FLASH configuration register
 FPROT = REGBS+$104 ;FLASH protection register
 FSTAT = REGBS+$105 ;FLASH status register
 FCMD = REGBS+$106 ;FLASH command register

 ECLKDIV = REGBS+$110 ;EEPROM clock divider

 ECNFG = REGBS+$113 ;EEPROM configuration register
 EPROT = REGBS+$114 ;EEPROM protection register
 ESTAT = REGBS+$115 ;EEPROM status register
 ECMD = REGBS+$116 ;EEPROM command register

 ATD1CTL0 = REGBS+$120 ;ADC1 control 0 (reserved)
 ATD1CTL1 = REGBS+$121 ;ADC1 control 1 (reserved)
 ATD1CTL2 = REGBS+$122 ;ADC1 control 2
 ATD1CTL3 = REGBS+$123 ;ADC1 control 3
 ATD1CTL4 = REGBS+$124 ;ADC1 control 4
 ATD1CTL5 = REGBS+$125 ;ADC1 control 5
 ATD1STAT = REGBS+$126 ;ADC1 status register hi
 *ATD1STAT = REGBS+$127 ;ADC1 status register lo
 ATD1TEST = REGBS+$128 ;ADC1 test (reserved)
 *ATD1TEST = REGBS+$129 ;

 ATDDIEN = REGBS+$12D ;ADC1 INPUT ENABLE REGISTER

 PORTAD1 = REGBS+$12F ;port ADC1 = input only
 ADR10H = REGBS+$130 ;ADC1 result 0 register
 ADR11H = REGBS+$132 ;ADC1 result 1 register
 ADR12H = REGBS+$134 ;ADC1 result 2 register
 ADR13H = REGBS+$136 ;ADC1 result 3 register
 ADR14H = REGBS+$138 ;ADC1 result 4 register
 ADR15H = REGBS+$13A ;ADC1 result 5 register
 ADR16H = REGBS+$13C ;ADC1 result 6 register
 ADR17H = REGBS+$13E ;ADC1 result 7 register
 CAN0CTL0 = REGBS+$140 ;CAN0 control register 0
 CAN0CTL1 = REGBS+$141 ;CAN0 control register 1
 CAN0BTR0 = REGBS+$142 ;CAN0 bus timing register 0
 CAN0BTR1 = REGBS+$143 ;CAN0 bus timing register 1
 CAN0RFLG = REGBS+$144 ;CAN0 receiver flags
 CAN0RIER = REGBS+$145 ;CAN0 receiver interrupt enables
 CAN0TFLG = REGBS+$146 ;CAN0 transmit flags
 CAN0TIER = REGBS+$147 ;CAN0 transmit interrupt enables
 CAN0TARQ = REGBS+$148 ;CAN0 transmit message abort control
 CAN0TAAK = REGBS+$149 ;CAN0 transmit message abort status
 CAN0TBEL = REGBS+$14A ;CAN0 transmit buffer select
 CAN0IDAC = REGBS+$14B ;CAN0 identfier acceptancecontrol

 CAN0RERR = REGBS+$14E ;CAN0 Receive error counter
 CAN0TERR = REGBS+$14F ;CAN0 Transmit error counter
 CAN0IDA0 = REGBS+$150 ;CAN0 Identifier acceptanceregister 0
 CAN0IDA1 = REGBS+$151 ;CAN0 Identifier acceptanceregister 1
 CAN0IDA2 = REGBS+$152 ;CAN0 Identifier acceptanceregister 2
 CAN0IDA3 = REGBS+$153 ;CAN0 Identifier acceptanceregister 3
 CAN0IDM0 = REGBS+$154 ;CAN0 Identifier mask register 0
 CAN0IDM1 = REGBS+$155 ;CAN0 Identifier mask register 1
 CAN0IDM2 = REGBS+$156 ;CAN0 Identifier mask register 2
 CAN0IDM3 = REGBS+$157 ;CAN0 Identifier mask register 3
 CAN0IDA4 = REGBS+$158 ;CAN0 Identifier acceptanceregister 4
 CAN0IDA5 = REGBS+$159 ;CAN0 Identifier acceptanceregister 5
 CAN0IDA6 = REGBS+$15A ;CAN0 Identifier acceptanceregister 6
 CAN0IDA7 = REGBS+$15B ;CAN0 Identifier acceptanceregister 7
 CAN0IDM4 = REGBS+$15C ;CAN0 Identifier mask register 4
 CAN0IDM5 = REGBS+$15D ;CAN0 Identifier mask register 5
 CAN0IDM6 = REGBS+$15E ;CAN0 Identifier mask register 6
 CAN0IDM7 = REGBS+$15F ;CAN0 Identifier mask register 7
 CAN0RXFG = REGBS+$160 ;CAN0 RX foregroundbuffer thru +$16F
 CAN0TXFG = REGBS+$170 ;CAN0 TX foregroundbuffer thru +$17F

 CAN1CTL0 = REGBS+$180 ;CAN1 control register 0
 CAN1CTL1 = REGBS+$181 ;CAN1 control register 1
 CAN1BTR0 = REGBS+$182 ;CAN1 bus timing register 0
 CAN1BTR1 = REGBS+$183 ;CAN1 bus timing register 1
 CAN1RFLG = REGBS+$184 ;CAN1 receiver flags
 CAN1RIER = REGBS+$185 ;CAN1 receiver interrupt enables
 CAN1TFLG = REGBS+$186 ;CAN1 transmit flags
 CAN1TIER = REGBS+$187 ;CAN1 transmit interrupt enables
 CAN1TARQ = REGBS+$188 ;CAN1 transmit message abort control
 CAN1TAAK = REGBS+$189 ;CAN1 transmit message abort status
 CAN1TBEL = REGBS+$18A ;CAN1 transmit buffer select
 CAN1IDAC = REGBS+$18B ;CAN1 identfier acceptancecontrol

 CAN1RERR = REGBS+$18E ;CAN1 Receive error counter
 CAN1TERR = REGBS+$18F ;CAN1 Transmit error counter
 CAN1IDA0 = REGBS+$190 ;CAN1 Identifier acceptanceregister 0
 CAN1IDA1 = REGBS+$191 ;CAN1 Identifier acceptanceregister 1
 CAN1IDA2 = REGBS+$192 ;CAN1 Identifier acceptanceregister 2
 CAN1IDA3 = REGBS+$193 ;CAN1 Identifier acceptanceregister 3
 CAN1IDM0 = REGBS+$194 ;CAN1 Identifier mask register 0
 CAN1IDM1 = REGBS+$195 ;CAN1 Identifier mask register 1
 CAN1IDM2 = REGBS+$196 ;CAN1 Identifier mask register 2
 CAN1IDM3 = REGBS+$197 ;CAN1 Identifier mask register 3
 CAN1IDA4 = REGBS+$198 ;CAN1 Identifier acceptanceregister 4
 CAN1IDA5 = REGBS+$199 ;CAN1 Identifier acceptanceregister 5
 CAN1IDA6 = REGBS+$19A ;CAN1 Identifier acceptanceregister 6
 CAN1IDA7 = REGBS+$19B ;CAN1 Identifier acceptanceregister 7
 CAN1IDM4 = REGBS+$19C ;CAN1 Identifier mask register 4
 CAN1IDM5 = REGBS+$19D ;CAN1 Identifier mask register 5
 CAN1IDM6 = REGBS+$19E ;CAN1 Identifier mask register 6
 CAN1IDM7 = REGBS+$19F ;CAN1 Identifier mask register 7
 CAN1RXFG = REGBS+$1A0 ;CAN1 RX foregroundbuffer thru +$1AF
 CAN1TXFG = REGBS+$1B0 ;CAN1 TX foregroundbuffer thru +$1BF

 CAN2CTL0 = REGBS+$1C0 ;CAN2 control register 0
 CAN2CTL1 = REGBS+$1C1 ;CAN2 control register 1
 CAN2BTR0 = REGBS+$1C2 ;CAN2 bus timing register 0
 CAN2BTR1 = REGBS+$1C3 ;CAN2 bus timing register 1
 CAN2RFLG = REGBS+$1C4 ;CAN2 receiver flags
 CAN2RIER = REGBS+$1C5 ;CAN2 receiver interrupt enables
 CAN2TFLG = REGBS+$1C6 ;CAN2 transmit flags
 CAN2TIER = REGBS+$1C7 ;CAN2 transmit interrupt enables
 CAN2TARQ = REGBS+$1C8 ;CAN2 transmit message abort control
 CAN2TAAK = REGBS+$1C9 ;CAN2 transmit message abort status
 CAN2TBEL = REGBS+$1CA ;CAN2 transmit buffer select
 CAN2IDAC = REGBS+$1CB ;CAN2 identfier acceptancecontrol

 CAN2RERR = REGBS+$1CE ;CAN2 Receive error counter
 CAN2TERR = REGBS+$1CF ;CAN2 Transmit error counter
 CAN2IDA0 = REGBS+$1D0 ;CAN2 Identifier acceptanceregister 0
 CAN2IDA1 = REGBS+$1D1 ;CAN2 Identifier acceptanceregister 1
 CAN2IDA2 = REGBS+$1D2 ;CAN2 Identifier acceptanceregister 2
 CAN2IDA3 = REGBS+$1D3 ;CAN2 Identifier acceptanceregister 3
 CAN2IDM0 = REGBS+$1D4 ;CAN2 Identifier mask register 0
 CAN2IDM1 = REGBS+$1D5 ;CAN2 Identifier mask register 1
 CAN2IDM2 = REGBS+$1D6 ;CAN2 Identifier mask register 2
 CAN2IDM3 = REGBS+$1D7 ;CAN2 Identifier mask register 3
 CAN2IDA4 = REGBS+$1D8 ;CAN2 Identifier acceptanceregister 4
 CAN2IDA5 = REGBS+$1D9 ;CAN2 Identifier acceptanceregister 5
 CAN2IDA6 = REGBS+$1DA ;CAN2 Identifier acceptanceregister 6
 CAN2IDA7 = REGBS+$1DB ;CAN2 Identifier acceptanceregister 7
 CAN2IDM4 = REGBS+$1DC ;CAN2 Identifier mask register 4
 CAN2IDM5 = REGBS+$1DD ;CAN2 Identifier mask register 5
 CAN2IDM6 = REGBS+$1DE ;CAN2 Identifier mask register 6
 CAN2IDM7 = REGBS+$1DF ;CAN2 Identifier mask register 7
 CAN2RXFG = REGBS+$1E0 ;CAN2 RX foregroundbuffer thru +$1EF
 CAN2TXFG = REGBS+$1F0 ;CAN2 TX foregroundbuffer thru +$1FF

 CAN3CTL0 = REGBS+$200 ;CAN3 control register 0
 CAN3CTL1 = REGBS+$201 ;CAN3 control register 1
 CAN3BTR0 = REGBS+$202 ;CAN3 bus timing register 0
 CAN3BTR1 = REGBS+$203 ;CAN3 bus timing register 1
 CAN3RFLG = REGBS+$204 ;CAN3 receiver flags
 CAN3RIER = REGBS+$205 ;CAN3 receiver interrupt enables
 CAN3TFLG = REGBS+$206 ;CAN3 transmit flags
 CAN3TIER = REGBS+$207 ;CAN3 transmit interrupt enables
 CAN3TARQ = REGBS+$208 ;CAN3 transmit message abort control
 CAN3TAAK = REGBS+$209 ;CAN3 transmit message abort status
 CAN3TBEL = REGBS+$20A ;CAN3 transmit buffer select
 CAN3IDAC = REGBS+$20B ;CAN3 identfier acceptancecontrol

 CAN3RERR = REGBS+$20E ;CAN3 Receive error counter
 CAN3TERR = REGBS+$20F ;CAN3 Transmit error counter
 CAN3IDA0 = REGBS+$210 ;CAN3 Identifier acceptanceregister 0
 CAN3IDA1 = REGBS+$211 ;CAN3 Identifier acceptanceregister 1
 CAN3IDA2 = REGBS+$212 ;CAN3 Identifier acceptanceregister 2
 CAN3IDA3 = REGBS+$213 ;CAN3 Identifier acceptanceregister 3
 CAN3IDM0 = REGBS+$214 ;CAN3 Identifier mask register 0
 CAN3IDM1 = REGBS+$215 ;CAN3 Identifier mask register 1
 CAN3IDM2 = REGBS+$216 ;CAN3 Identifier mask register 2
 CAN3IDM3 = REGBS+$217 ;CAN3 Identifier mask register 3
 CAN3IDA4 = REGBS+$218 ;CAN3 Identifier acceptanceregister 4
 CAN3IDA5 = REGBS+$219 ;CAN3 Identifier acceptanceregister 5
 CAN3IDA6 = REGBS+$21A ;CAN3 Identifier acceptanceregister 6
 CAN3IDA7 = REGBS+$21B ;CAN3 Identifier acceptanceregister 7
 CAN3IDM4 = REGBS+$21C ;CAN3 Identifier mask register 4
 CAN3IDM5 = REGBS+$21D ;CAN3 Identifier mask register 5
 CAN3IDM6 = REGBS+$21E ;CAN3 Identifier mask register 6
 CAN3IDM7 = REGBS+$21F ;CAN3 Identifier mask register 7
 CAN3RXFG = REGBS+$220 ;CAN3 RX foregroundbuffer thru +$22F
 CAN3TXFG = REGBS+$230 ;CAN3 TX foregroundbuffer thru +$23F

 PTT = REGBS+$240 ;portT data register
 PTIT = REGBS+$241 ;portT input register
 DDRT = REGBS+$242 ;portT direction register
 RDRT = REGBS+$243 ;portT reduced drive register
 PERT = REGBS+$244 ;portT pull device enable
 PPST = REGBS+$245 ;portT pull polarity select

 PTS = REGBS+$248 ;portS data register
 PTIS = REGBS+$249 ;portS input register
 DDRS = REGBS+$24A ;portS direction register
 RDRS = REGBS+$24B ;portS reduced drive register
 PERS = REGBS+$24C ;portS pull device enable
 PPSS = REGBS+$24D ;portS pull polarity select
 WOMS = REGBS+$24E ;portS Wired Or mode register

 PTM = REGBS+$250 ;portM data register
 PTIM = REGBS+$251 ;portM input register
 DDRM = REGBS+$252 ;portM direction register
 RDRM = REGBS+$253 ;portM reduced drive register
 PERM = REGBS+$254 ;portM pull device enable
 PPSM = REGBS+$255 ;portM pull polarity select
 WOMM = REGBS+$256 ;portM Wired Or mode register
 MODRR = REGBS+$257 ;portM Module routing register
 PTP = REGBS+$258 ;portP data register
 PTIP = REGBS+$259 ;portP input register
 DDRP = REGBS+$25A ;portP direction register
 RDRP = REGBS+$25B ;portP reduced drive register
 PERP = REGBS+$25C ;portP pull device enable
 PPSP = REGBS+$25D ;portP pull polarity select
 PIEP = REGBS+$25E ;portP interrupt enable register
 PIFP = REGBS+$25F ;portP interrupt flag register
 PTH = REGBS+$260 ;portH data register
 PTIH = REGBS+$261 ;portH input register
 DDRH = REGBS+$262 ;portH direction register
 RDRH = REGBS+$263 ;portH reduced drive register
 PERH = REGBS+$264 ;portH pull device enable
 PPSH = REGBS+$265 ;portH pull polarity select
 PIEH = REGBS+$266 ;portH interrupt enable register
 PIFH = REGBS+$267 ;portH interrupt flag register
 PTJ = REGBS+$268 ;portP data register
 PTIJ = REGBS+$269 ;portP input register
 DDRJ = REGBS+$26A ;portP direction register
 RDRJ = REGBS+$26B ;portP reduced drive register
 PERJ = REGBS+$26C ;portP pull device enable
 PPSJ = REGBS+$26D ;portP pull polarity select
 PIEJ = REGBS+$26E ;portP interrupt enable register
 PIFJ = REGBS+$26F ;portP interrupt flag register

 CAN4CTL0 = REGBS+$280 ;CAN4 control register 0
 CAN4CTL1 = REGBS+$281 ;CAN4 control register 1
 CAN4BTR0 = REGBS+$282 ;CAN4 bus timing register 0
 CAN4BTR1 = REGBS+$283 ;CAN4 bus timing register 1
 CAN4RFLG = REGBS+$284 ;CAN4 receiver flags
 CAN4RIER = REGBS+$285 ;CAN4 receiver interrupt enables
 CAN4TFLG = REGBS+$286 ;CAN4 transmit flags
 CAN4TIER = REGBS+$287 ;CAN4 transmit interrupt enables
 CAN4TARQ = REGBS+$288 ;CAN4 transmit message abort control
 CAN4TAAK = REGBS+$289 ;CAN4 transmit message abort status
 CAN4TBEL = REGBS+$28A ;CAN4 transmit buffer select
 CAN4IDAC = REGBS+$28B ;CAN4 identfier acceptancecontrol

 CAN4RERR = REGBS+$28E ;CAN4 Receive error counter
 CAN4TERR = REGBS+$28F ;CAN4 Transmit error counter
 CAN4IDA0 = REGBS+$290 ;CAN4 Identifier acceptanceregister 0
 CAN4IDA1 = REGBS+$291 ;CAN4 Identifier acceptanceregister 1
 CAN4IDA2 = REGBS+$292 ;CAN4 Identifier acceptanceregister 2
 CAN4IDA3 = REGBS+$293 ;CAN4 Identifier acceptanceregister 3
 CAN4IDM0 = REGBS+$294 ;CAN4 Identifier mask register 0
 CAN4IDM1 = REGBS+$295 ;CAN4 Identifier mask register 1
 CAN4IDM2 = REGBS+$296 ;CAN4 Identifier mask register 2
 CAN4IDM3 = REGBS+$297 ;CAN4 Identifier mask register 3
 CAN4IDA4 = REGBS+$298 ;CAN4 Identifier acceptanceregister 4
 CAN4IDA5 = REGBS+$299 ;CAN4 Identifier acceptanceregister 5
 CAN4IDA6 = REGBS+$29A ;CAN4 Identifier acceptanceregister 6
 CAN4IDA7 = REGBS+$29B ;CAN4 Identifier acceptanceregister 7
 CAN4IDM4 = REGBS+$29C ;CAN4 Identifier mask register 4
 CAN4IDM5 = REGBS+$29D ;CAN4 Identifier mask register 5
 CAN4IDM6 = REGBS+$29E ;CAN4 Identifier mask register 6
 CAN4IDM7 = REGBS+$29F ;CAN4 Identifier mask register 7
 CAN4RXFG = REGBS+$2A0 ;CAN4 RX foregroundbuffer thru +$2AF
 CAN4TXFG = REGBS+$2B0 ;CAN4 TX foregroundbuffer thru +$2BF
